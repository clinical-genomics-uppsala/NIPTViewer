# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: 
     - dev 
     - master
  pull_request:
    branches: 
     - dev 
     - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  health-check-job: # health check job for testing and code formatting check
    runs-on: ubuntu-latest # os for running the job
    strategy:
      matrix:
        python-version: [ 3.8 ]
    services:
      postgres: # we need a postgres docker image to be booted a side car service to run the tests that needs a db
        image: postgres
        env: # the environment variable must match with app/settings.py if block of DATBASES variable otherwise test will fail due to connectivity issue.
          POSTGRES_USER: nipt_user
          POSTGRES_PASSWORD: nipt_password_postgres
          POSTGRES_DB: nipt_test_view
        ports:
          - 5432:5432 # exposing 5432 port for application to use
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code # checking our the code at current commit that triggers the workflow
        uses: actions/checkout@v2
      - name: Cache dependency # caching dependency will make our build faster.
        uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
            python-version: ${{ matrix.python-version }}
      - name: Check Python version # checking the python version to see if 3.x is installed.
        run: python --version
      - name: Install requirements # install application requirements
        run: pip install --no-use-pep517 -r requirements.txt
      - name: Set the value
        id: step_one
        run: |
          echo 'DEBUG=1' >> $GITHUB_ENV
          echo 'DATABASE=postgres' >> $GITHUB_ENV
          echo 'SQL_ENGINE=django.db.backends.postgresql' >> $GITHUB_ENV
          echo 'SQL_DATABASE=nipt_test_view' >> $GITHUB_ENV
          echo 'SQL_USER=nipt_user' >> $GITHUB_ENV
          echo 'SQL_PASSWORD=nipt_password_postgres' >> $GITHUB_ENV
          echo 'SQL_HOST=localhost' >> $GITHUB_ENV
          echo 'SQL_PORT=5432' >> $GITHUB_ENV
      - name: Run Migrations # run migrations to create table in side car db container
        run: python manage.py migrate
        working-directory: ./niptviewer
      - name: Run Test # running tests
        run: python manage.py test
        working-directory: ./niptviewer
      - name: Check Syntax # check code formatting
        run: pycodestyle --max-line-length=130 --statistics .


