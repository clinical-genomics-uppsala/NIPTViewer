apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: 2021-10-25T10:42:09Z
  labels:
    app: niptviewer
  name: niptviewer
spec:
  containers:
  - name: nginx
    image: smeds84/niptviewernginx:1.0.0
    ports:
    - containerPort: 80
      hostport: 80
      protocol: TCP
    - containerPort: 443
      hostport: 443
      protocol: TCP
    volumeMounts:
     - name: staticfiles
       mountPath: /home/app/web/staticfiles
     - name: key_file
       mountPath: /etc/certs/private.key
       readOnly: true
     - name: crt_file
       mountPath: /etc/certs/public.crt
       readOnly: true
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
  - name: web
    image: smeds84/niptviewer:v1.9.3
    env:
    - name: SECRET_KEY
      value: REPLACE_WITH_A_SECRET_KEY
    - name: DJANGO_ALLOWED_HOSTS
      value: 127.0.0.1 localhost
    - name: DEBUG
      value: 0
    # - name: "DATABASE"
    #   value: "sqlite"
    #- name: "SQL_ENGINE"
    #  value: "django.db.backends.postgresql"
    # - name: "SQL_DATABASE"
    #   value: "hello_django_prod"
    # - name: "SQL_HOST"
    #   value: "localhost"
    # - name: "SQL_USER"
    #   value: "user_secret"
    # - name: "SQL_PASSWORD"
    #   value: "password_secret"
    envFrom:
    - secretRef:
        name: user_secret
    - secretRef:
        name: password_secret
    volumeMounts:
     - name: staticfiles
       mountPath: /home/app/web/staticfiles
     - name: staticfiles
       mountPath: /staticfiles
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
  volumes:
    - name: staticfiles
      persistentVolumeClaim:
        claimName: niptviewer-staticfiles
    - name: crt_file
      hostpath:
        path: nginx/SSL/nginx-selfsigned.crt
    - name: key_file
      hostpath:
        path: nginx/SSL/nginx-selfsigned.key
  restartPolicy: Always


status: {}
