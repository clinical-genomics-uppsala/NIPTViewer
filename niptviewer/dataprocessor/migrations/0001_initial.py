# Generated by Django 3.1.1 on 2020-09-24 12:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Flowcell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flowcell_barcode', models.CharField(help_text='Flowcell identification.', max_length=9, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Index',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_id', models.CharField(help_text='Index id.', max_length=6, unique=True)),
                ('index', models.CharField(help_text='Index sequence.', max_length=6, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Sample type.', max_length=9, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SamplesRunData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('well', models.CharField(help_text='Well id', max_length=10)),
                ('description', models.TextField(help_text='Description.')),
                ('library_nm', models.DecimalField(decimal_places=10, max_digits=15)),
                ('qc_flag', models.IntegerField(choices=[(0, 'Pass'), (1, 'Warning'), (2, 'Failure')])),
                ('qc_failure', models.TextField(help_text='Description.')),
                ('qc_warning', models.TextField(help_text='Description.')),
                ('ncv_13', models.DecimalField(decimal_places=10, help_text='Normalized Chromosomal Value (z-score) 13', max_digits=15)),
                ('ncv_18', models.DecimalField(decimal_places=10, help_text='Normalized Chromosomal Value (z-score) 18', max_digits=15)),
                ('ncv_21', models.DecimalField(decimal_places=10, help_text='Normalized Chromosomal Value (z-score) 21', max_digits=15)),
                ('ncv_X', models.DecimalField(decimal_places=10, help_text='Normalized Chromosomal Value (z-score) X', max_digits=15)),
                ('ncv_Y', models.DecimalField(decimal_places=10, help_text='Normalized Chromosomal Value (z-score) Y', max_digits=15)),
                ('ratio_13', models.DecimalField(decimal_places=10, help_text='Chromosomal Ratio 13', max_digits=15)),
                ('ratio_18', models.DecimalField(decimal_places=10, help_text='Chromosomal Ratio 18', max_digits=15)),
                ('ratio_21', models.DecimalField(decimal_places=10, help_text='Chromosomal Ratio 21', max_digits=15)),
                ('ratio_X', models.DecimalField(decimal_places=10, help_text='Chromosomal Ratio X', max_digits=15)),
                ('ratio_y', models.DecimalField(decimal_places=10, help_text='Chromosomal Ratio Y', max_digits=15)),
                ('clusters', models.IntegerField(help_text='Total number of clusters across lanes (Reported per flow cell)')),
                ('total_reads_2_clusters', models.IntegerField(help_text='Ratio of recovered reads to number of clusters across lanes (Reported per flow cell)')),
                ('max_misindexed_reads_2_clusters', models.FloatField(help_text='Ratio of misindexed reads across lanes to clusters in a virtual lane (Reported per flow cell)')),
                ('indexed_reads', models.IntegerField(help_text='Total number of indexed reads per sample across lanes')),
                ('total_indexed_reads_2_clusters', models.DecimalField(decimal_places=10, help_text='Ratio of indexed reads to clusters (Reported per flow cell)', max_digits=15)),
                ('tags', models.IntegerField(help_text='Number of reads mapped to a unique place in the genome')),
                ('non_excluded_sites', models.IntegerField(help_text='Number of tags excluding filtered genome regions and duplicate reads mapping to the same location')),
                ('non_excluded_sites_2_tags', models.DecimalField(decimal_places=10, help_text='Ratio of NonExcludedSites to tags', max_digits=15)),
                ('tags_2_indexed_reads', models.DecimalField(decimal_places=10, help_text='Ratio of tags to indexed reads', max_digits=15)),
                ('perfect_match_tags_2_tags', models.DecimalField(decimal_places=10, help_text='Ratio of perfectly mapped tags to all tags', max_digits=15)),
                ('gc_bias', models.DecimalField(decimal_places=10, help_text='Residual GC bias in the read distribution after correction', max_digits=15)),
                ('gcr2', models.DecimalField(decimal_places=10, help_text='R2 of the GC correction (percentage of variance explained by GC correction)', max_digits=15)),
                ('ncd_13', models.DecimalField(decimal_places=10, help_text='Likelihood score for chromosome 13 denominators', max_digits=15)),
                ('ncd_18', models.DecimalField(decimal_places=10, help_text='Likelihood score for chromosome 18 denominators', max_digits=15)),
                ('ncd_21', models.DecimalField(decimal_places=10, help_text='Likelihood score for chromosome 21 denominators', max_digits=15)),
                ('ncd_x', models.DecimalField(decimal_places=10, help_text='Likelihood score for chromosome X denominators', max_digits=15)),
                ('ncd_y', models.DecimalField(decimal_places=10, help_text='Likelihood score for chromosome Y denominators', max_digits=15)),
                ('chr1_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr2_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr3_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr4_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr5_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr6_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr7_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr8_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr9_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr10_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr11_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr12_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr13_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr14_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr15_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr16_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr17_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr18_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr19_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr20_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr21_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr22_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chrx_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chry_coverage', models.DecimalField(decimal_places=10, help_text='Normalized coverage of each chromosome used in evaluation of chromosomal ratios', max_digits=15)),
                ('chr1', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr2', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr3', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr4', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr5', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr6', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr7', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr8', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr9', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr10', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr11', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr12', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr13', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr14', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr15', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr16', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr17', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr18', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr19', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr20', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr21', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chr22', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('Chrx', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('chry', models.IntegerField(help_text='Total number of NonExcludedSites used for analysis of a corresponding chromosome (integer value)')),
                ('ff_formatted', models.DecimalField(decimal_places=10, help_text='Estimated fetal component of cfDNA recovered by the assay. Reported as a discreet, rounded percentage that provides additional information for each sample.', max_digits=15)),
                ('flowcell_id', models.ForeignKey(help_text='Flowcell ID', on_delete=django.db.models.deletion.CASCADE, to='dataprocessor.flowcell')),
                ('index', models.ForeignKey(help_text='Index used', on_delete=django.db.models.deletion.CASCADE, to='dataprocessor.index')),
                ('sample_type', models.ForeignKey(help_text='Flowcell ID', on_delete=django.db.models.deletion.CASCADE, to='dataprocessor.sampletype')),
            ],
        ),
        migrations.CreateModel(
            name='BatchRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('median_13', models.DecimalField(decimal_places=10, help_text='Batch median of chromosomal ratios for putative diploid samples. ChrX and chrY are based on putative female samples only.', max_digits=15)),
                ('median_18', models.DecimalField(decimal_places=10, help_text='Batch median of chromosomal ratios for putative diploid samples. ChrX and chrY are based on putative female samples only.', max_digits=15)),
                ('median_21', models.DecimalField(decimal_places=10, help_text='Batch median of chromosomal ratios for putative diploid samples. ChrX and chrY are based on putative female samples only.', max_digits=15)),
                ('median_x', models.DecimalField(decimal_places=10, help_text='Batch median of chromosomal ratios for putative diploid samples. ChrX and chrY are based on putative female samples only.', max_digits=15)),
                ('median_y', models.DecimalField(decimal_places=10, help_text='Batch median of chromosomal ratios for putative diploid samples. ChrX and chrY are based on putative female samples only.', max_digits=15)),
                ('stdev_13', models.FloatField(help_text='Batch standard deviation of chromosomal ratios for putative diploid samples. ChrX and chrY based on putative female samples only')),
                ('stdev_18', models.FloatField(help_text='Batch standard deviation of chromosomal ratios for putative diploid samples. ChrX and chrY based on putative female samples only')),
                ('stdev_21', models.FloatField(help_text='Batch standard deviation of chromosomal ratios for putative diploid samples. ChrX and chrY based on putative female samples only')),
                ('stdev_X', models.FloatField(help_text='Batch standard deviation of chromosomal ratios for putative diploid samples. ChrX and chrY based on putative female samples only')),
                ('stdev_Y', models.FloatField(help_text='Batch standard deviation of chromosomal ratios for putative diploid samples. ChrX and chrY based on putative female samples only')),
                ('flowcell_id', models.ForeignKey(help_text='Flowcell ID', on_delete=django.db.models.deletion.CASCADE, to='dataprocessor.flowcell')),
            ],
        ),
    ]
